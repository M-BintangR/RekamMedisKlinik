<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0ALQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1Ek570c+9Hc0UAHPvRz70UUAHPvRz70UUAHPvRz70UUAHPvRz
        70UUAHPvRz70UUAHPvRz70UUAHPvRz70UUAHPvRz70UUAHPvRz70UUAHPvRz70UUAOXOO9FC9KKAG9zR
        R3NFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA5elFC9KKAG9zRR3NFABRR
        RQAUUUUAFFFFABRioLu8hso90x5P3UHVv/re9YV1rFzcEhG8lP7qdfxPWgDo3ZY/9Yyp/vECmLcQscLP
        ET7OK5BvmOTyfU0YHpQB2eOM9vWiuQhuJrc5hldD7Hj8q17LXAxCXYCn/noo4/EUAbFFICCAQQQeQRS0
        AFFFFABRRRQAUUUUAOXpRQvSigBvc0UdzRQAUUUUAFFFFABVe9u0srYysMseEX1P+FWOtc1rFz9ovmUH
        McXyL/U/nQBUlleeVpJWLOx5JplFFABRRRQAUUUUAaek6iYJBBKf3TH5Sf4T/hXQVxh5rptJuTc2Sljl
        0Oxv6fpQBdooooAKKKKACiiigBy9KKF6UUAN7mijuaKACiiigAooooAa7+XG7/3FLfkK47JPJ6muuuhm
        znA6mNv5GuRHSgAooooAKKKKACiiigArW8PyEXE0eeCob8j/APXrJrS0AH7e57CM/wAxQB0NFFFABRRR
        QAUUUUAOXpRQvSigBvc0UdzRQAUUUUAFFFFABweD0PWuPniME8kTdUYiuwrF12zJxdIM9pP6H+lAGNRR
        RQAUUUUAFFFFABW34fhwk0x/iIQfh1/nWNFE88qxRjLucD/GustoFtrdIU+6gxn196AJaKKKACiiigAo
        oooAcvSihelFADe5oo7migAooooAKKKKACkIDKQwBB4IPelqG5uobOPfO2AegHJb6CgDE1HSntiZIAXh
        9ByV/wDrVm1o3Wt3E+Vh/cR/7J+Y/U/4VnUAFFFFABT4oZJ5AkKF2PYf54plSwXU1q26GRkJ6gdD9RQB
        0Gm6ctihZiGmYfM3Yewq9WVZa2kpCXIEb/3x90/4VqDnmgBaKKKACiiigAooooAcvSihelFADe5oo7mi
        gAooooAKKKZLKkELyyHCIMn/AAoAgv79LGEMRukb7ievufauZmnkuZTJMxZz3NOubmS7uHmkPLHgdgOw
        qKgAooooAKKKKACiiigArS0zVGtmEUxJhPQ90/8ArVm0UAdkCCMg5B7ilrG0S+J/0WQ8jmM/zFbNABRR
        RQAUUUUAOXpRQvSigBvc0UdzRQAUUUUAFY2v3P8Aq7ZT/tv/AE/rWyBniuV1CXztQnfPG8gfQcD+VAFa
        iiigAooooAKKKKACiiigAooooAckjRSLIhwykEV10MqzwJKv3XUEVx9dDoUu+xZD/wAs3I/A80AaVFFF
        ABRRRQA5elFC9KKAG9zRR3NFABRRRQAA4IPpXGE5JPqc12eKg+w2v/PtD/3wKAOTorrPsNr/AM+0P/fA
        o+w2v/PtD/3wKAOTorrPsNr/AM+0P/fAo+w2v/PtD/3wKAOTorrPsNr/AM+0P/fAo+w2v/PtD/3wKAOT
        orrPsNr/AM+0P/fAo+w2v/PtD/3wKAOTorrPsNr/AM+0P/fAo+w2v/PtD/3wKAOTrY8PN81yvsp/nWp9
        htf+faH/AL4FPit4oc+VEiZ67VAzQBJRRRQAUUUUAOXpRQvSigBvc0UdzRQAUUUUAFFFFABRRRQAUUUU
        AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAOXpRQvSigA2jNG0UUUAG0UbRRRQAbRRtFFFABtFG0UUUAG0
        UbRRRQAbRRtFFFABtFG0UUUAG0UbRRRQAbRRtFFFABtFG0UUUAG0UbRRRQAoXAooooA//9k=
</value>
  </data>
</root>