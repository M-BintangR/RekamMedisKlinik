<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>